@page "/CancellationRequest"
@inject ICancellationRequestService _cancellationRequestService;
@inject IJSRuntime jsRuntime;
@inject HttpClient _httpClient;

<h1>Solicitar Cancelamento de Pedido</h1>

<div class="form" id="form">
    <label>Solicitante: </label>
    <input class="text inputs" type="text" name="order" id="order" maxlength="38" @bind-value="inputValueRequester" @bind-value:event="oninput" @onkeyup="Enter">
    <label>Pedido: </label>
    <input class="text inputs" type="text" name="order" id="order" maxlength="38" @bind-value="orderNumber" @bind-value:event="oninput" @onkeyup="Enter">
    <select class="col-md-4 inputs" id="sel_reasons" @bind="inputValueReason">
    @foreach (var reason in reasons)
    {
        <option value="@reason.Key">@reason.Key - @reason.Value</option>
    }
    </select>
</div>

<div class="toolbar">
    <div class="dir">
        <button name="B1" id="B1" @onclick="@(() => solicitarCancelamento())">Prosseguir</button>
    </div>
</div>

<div class="grid" style="display: @display">
    <QuickGrid Items="@order.itens.AsQueryable()" Theme="corporate" Pagination="@pagination" @ref="myGrid">
        <TemplateColumn Align="Align.Center">
            <div style="min-height: 1.5rem; padding: 1.5rem">
                <input onclick="@(() => SelectProduct(context))" type="checkbox" name="checkbox" id="checkbox">
            </div>
        </TemplateColumn>
        <PropertyColumn Property="@(p => p.cod_product)" Title="Código" Sortable="true" Align="Align.Center" Class="cols"></PropertyColumn>
        <PropertyColumn Property="@(p => p.description_product)" Title="Descrição" Align="Align.Center" Class="cols descricao"></PropertyColumn>
        <PropertyColumn Property="@(p => p.quantity_product)" Title="Qtde" Sortable="true" Align="Align.Center" Class="cols"></PropertyColumn>
        <PropertyColumn Property="@(p => p.picked_quantity_product)" Title="Canc." Align="Align.Center" Class="cols"></PropertyColumn>
        <PropertyColumn Property="@(p => p.unitary_value_product)" Title="Valor Unitátio" Align="Align.Center" Class="cols"></PropertyColumn>
        <PropertyColumn Property="@(p => p.amount_product)" Title="Valor Total" Align="Align.Center" Class="cols"></PropertyColumn>
    </QuickGrid>
</div>

@if (modalConfirmacao)
{
    if (resultado)
    {
        <AlertModal Title="Sucesso"
                    Text="Solicitação Gerada com Sucesso"
                    OnCloseEvent="@(() => modalConfirmacao = false)"
                    OnClickEvent="@(() => modalConfirmacao = false)">
        </AlertModal>
    }
    else
    {
        <AlertModal Title="Erro"
                    Text="Falha ao Solicitar Requisição de Cancelamento"
                    OnCloseEvent="@(() => modalConfirmacao = false)"
                    OnClickEvent="@(() => modalConfirmacao = false)">
        </AlertModal>
    }
}

@if (modalRequester)
{
    <AlertModal Title="Erro"
                Text="O solicitante não pode estar vazio"
                OnCloseEvent="@(() => modalRequester = false)"
                OnClickEvent="@(() => modalRequester = false)">
    </AlertModal>
}

@if (modalOrderNumberEmpty)
{
    <AlertModal Title="Erro"
                Text="O código do pedido não pode estar vazio"
                OnCloseEvent="@(() => modalOrderNumberEmpty = false)"
                OnClickEvent="@(() => modalOrderNumberEmpty = false)">
    </AlertModal>
}

@if (modalListProducts)
{
    <AlertModal Title="Erro"
                Text="Ao menos um produto deve ser selecionado"
                OnCloseEvent="@(() => modalListProducts = false)"
                OnClickEvent="@(() => modalListProducts = false)">
    </AlertModal>
}